/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.0.27
 * Generated at: 2024-03-17 14:58:34 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import com.shashi.service.impl.*;
import com.shashi.service.*;
import com.shashi.beans.*;
import java.util.*;
import javax.servlet.ServletOutputStream;
import java.io.*;
import org.json.JSONObject;
import java.net.URLDecoder;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("com.shashi.beans");
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("java.io");
    _jspx_imports_packages.add("com.shashi.service.impl");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_packages.add("com.shashi.service");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("org.json.JSONObject");
    _jspx_imports_classes.add("java.net.URLDecoder");
    _jspx_imports_classes.add("javax.servlet.ServletOutputStream");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    <!DOCTYPE html>\r\n");
      out.write("    <html>\r\n");
      out.write("        <head>\r\n");
      out.write("            <title>Ellison Electronics</title>\r\n");
      out.write("            <meta charset=\"utf-8\">\r\n");
      out.write("            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("            <link rel=\"stylesheet\"\r\n");
      out.write("                  href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/css/bootstrap.min.css\">\r\n");
      out.write("            <link rel=\"stylesheet\" href=\"css/changes.css\">\r\n");
      out.write("            <script\r\n");
      out.write("            src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\r\n");
      out.write("            <script\r\n");
      out.write("            src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/js/bootstrap.min.js\"></script>\r\n");
      out.write("        </head>\r\n");
      out.write("        <body style=\"background-color: #E6F9E6;\">\r\n");
      out.write("\r\n");
      out.write("            ");

                /* Checking the user credentials */
                String userName = (String) session.getAttribute("username");
                String password = (String) session.getAttribute("password");
                String userType = (String) session.getAttribute("usertype");

                ProductServiceImpl prodDao = new ProductServiceImpl();
                List<ProductBean> products = new ArrayList<ProductBean>();

                String search = request.getParameter("search");
                String type = request.getParameter("type");
                String message = "All Products";
                if (search != null || type != null) {
                    products = prodDao.searchAllProducts(search, type);
                } else {
                    products = prodDao.getAllProducts();
                }
                if (products.isEmpty()) {
                    message = "No items found for the search '" + (search != null ? search : type) + "'";
                    products = prodDao.getAllProducts();
                }
            
      out.write("\r\n");
      out.write("\r\n");
      out.write("            ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "header.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("            <div class=\"text-center\"\r\n");
      out.write("                 style=\"color: black; font-size: 14px; font-weight: bold;\">");
      out.print(message);
      out.write("</div>\r\n");
      out.write("            <div class=\"text-center\" id=\"message\"\r\n");
      out.write("                 style=\"color: black; font-size: 14px; font-weight: bold;\"></div>\r\n");
      out.write("            <!-- Start of Product Items List -->\r\n");
      out.write("            <div class=\"container\">\r\n");
      out.write("                <div class=\"row text-center\">\r\n");
      out.write("                    ");

                        Cookie[] cookies = request.getCookies();
                        String cartJson = null;

                        if (userName == null) {
                            if (cookies != null) {
                                for (Cookie cookie : cookies) {
                                    if (cookie.getName().equals("cart")) {
                                        cartJson = URLDecoder.decode(cookie.getValue(), "UTF-8");
                                        break;
                                    }
                                }
                            }

                            for (ProductBean product : products) {
                                JSONObject cart = (cartJson != null) ? new JSONObject(cartJson) : new JSONObject();
                                String prodId = product.getProdId();
                    
      out.write("\r\n");
      out.write("                    <div class=\"col-sm-4\" style='height: 350px;'>\r\n");
      out.write("                        <div class=\"thumbnail\">\r\n");
      out.write("                            <img src=\"./ShowImage?pid=");
      out.print(product.getProdId());
      out.write("\" alt=\"Product\"\r\n");
      out.write("                                 style=\"height: 150px; max-width: 180px\">\r\n");
      out.write("                            <p class=\"productname\">");
      out.print(product.getProdName());
      out.write("</p>\r\n");
      out.write("                            ");

                                String description = product.getProdInfo();
                                description = description.substring(0, Math.min(description.length(), 100));
                            
      out.write("\r\n");
      out.write("                            <p class=\"productinfo\">");
      out.print(description);
      out.write("..</p>\r\n");
      out.write("                            <p class=\"price\">Rs");
      out.print(product.getProdPrice());
      out.write("</p>\r\n");
      out.write("                            <form method=\"post\">\r\n");
      out.write("                                ");

                                    if (!cart.has(prodId)) {
                                
      out.write("\r\n");
      out.write("                                <button type=\"submit\"\r\n");
      out.write("                                        formaction=\"./AddtoCart?uid=");
      out.print(session.getId());
      out.write("&pid=");
      out.print(product.getProdId());
      out.write("&pqty=1\"\r\n");
      out.write("                                        class=\"btn btn-success\">Add to Cart</button>\r\n");
      out.write("                                &nbsp;&nbsp;&nbsp;\r\n");
      out.write("                                <button type=\"submit\"\r\n");
      out.write("                                        formaction=\"payment.jsp?amount=");
      out.print(product.getProdPrice());
      out.write("&buyNow=1&pid=");
      out.print(product.getProdId());
      out.write("\r\n");
      out.write("                                        &pName=");
      out.print(product.getProdName());
      out.write("&pType=");
      out.print(product.getProdCategory());
      out.write("\"\r\n");
      out.write("                                        class=\"btn btn-primary\">Buy Now</button>\r\n");
      out.write("                                ");

                                } else {
                                
      out.write("\r\n");
      out.write("                                <button type=\"submit\"\r\n");
      out.write("                                        formaction=\"./AddtoCart?uid=");
      out.print(session.getId());
      out.write("&pid=");
      out.print(product.getProdId());
      out.write("&pqty=0\"\r\n");
      out.write("                                        class=\"btn btn-danger\">Remove From Cart</button>\r\n");
      out.write("                                &nbsp;&nbsp;&nbsp;\r\n");
      out.write("                                <button type=\"submit\"\r\n");
      out.write("                                        formaction=\"payment.jsp?amount=");
      out.print(product.getProdPrice());
      out.write("\"\r\n");
      out.write("                                        class=\"btn btn-primary\">Checkout</button>\r\n");
      out.write("                                ");

                                    }
                                
      out.write("\r\n");
      out.write("                            </form>\r\n");
      out.write("                            <br />\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    ");

                        }
                    } else {
                        for (ProductBean product : products) {
                            int cartQty = new CartServiceImpl().getCartItemCount(session.getId(), product.getProdId());
                    
      out.write("\r\n");
      out.write("                    <div class=\"col-sm-4\" style='height: 350px;'>\r\n");
      out.write("                        <div class=\"thumbnail\">\r\n");
      out.write("                            <img src=\"./ShowImage?pid=");
      out.print(product.getProdId());
      out.write("\" alt=\"Product\"\r\n");
      out.write("                                 style=\"height: 150px; max-width: 180px\">\r\n");
      out.write("                            <p class=\"productname\">");
      out.print(product.getProdName());
      out.write("</p>\r\n");
      out.write("                            ");

                                String description = product.getProdInfo();
                                description = description.substring(0, Math.min(description.length(), 100));
                            
      out.write("\r\n");
      out.write("                            <p class=\"productinfo\">");
      out.print(description);
      out.write("..</p>\r\n");
      out.write("                            <p class=\"price\">Rs");
      out.print(product.getProdPrice());
      out.write("</p>\r\n");
      out.write("                            <form method=\"post\">\r\n");
      out.write("                                ");

                                    if (cartQty == 0) {
                                
      out.write("\r\n");
      out.write("                                <button type=\"submit\"\r\n");
      out.write("                                        formaction=\"./AddtoCart?uid=");
      out.print(session.getId());
      out.write("&pid=");
      out.print(product.getProdId());
      out.write("&pqty=1\"\r\n");
      out.write("                                        class=\"btn btn-success\">Add to Cart</button>\r\n");
      out.write("                                &nbsp;&nbsp;&nbsp;\r\n");
      out.write("                                <button type=\"submit\"\r\n");
      out.write("                                        formaction=\"./AddtoCart?uid=");
      out.print(session.getId());
      out.write("&pid=");
      out.print(product.getProdId());
      out.write("&pqty=1\"\r\n");
      out.write("                                        class=\"btn btn-primary\">Buy now</button>\r\n");
      out.write("                                ");

                                } else {
                                
      out.write("\r\n");
      out.write("                                <button type=\"submit\"\r\n");
      out.write("                                        formaction=\"./AddtoCart?uid=");
      out.print(session.getId());
      out.write("&pid=");
      out.print(product.getProdId());
      out.write("&pqty=0\"\r\n");
      out.write("                                        class=\"btn btn-danger\">Remove From Cart</button>\r\n");
      out.write("                                &nbsp;&nbsp;&nbsp;\r\n");
      out.write("                                <button type=\"submit\" formaction=\"cartDetails.jsp\"\r\n");
      out.write("                                        class=\"btn btn-success\">Checkout</button>\r\n");
      out.write("                                ");

                                    }
                                
      out.write("\r\n");
      out.write("                            </form>\r\n");
      out.write("                            <br />\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    ");

                            }
                        }
                    
      out.write("\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("            <!-- ENd of Product Items List -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("            ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "footer.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("        </body>\r\n");
      out.write("    </html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
